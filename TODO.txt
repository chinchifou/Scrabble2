PRIMARY

check TODO in code

text file for ui text in different

Make the hand holder a sprite (for "PLAY_LETTER")

create toTile() and toPixel() ?

/!\ warning for "PLAY_LETTER", the letter must not always go where the player release the click. More calculation to do use collidelistall()


create draw all() function ? see for background copy and buttons and scores ...
def draw all()
	layer_background.draw()
	layer_letters.draw()
	...

create a class Action()

create function for log ?



SECONDARY

Able to change the language of the UI

FOR BUTTON do :

# Main Loop
while running:
    # Mouse position and button clicking.
    pos = pygame.mouse.get_pos()
    pressed1, pressed2, pressed3 = pygame.mouse.get_pressed()
    # Check if the rect collided with the mouse pos
    # and if the left mouse button was pressed.
    if Rectplace.collidepoint(pos) and pressed1:
        print("You have opened a chest!")

use save game

allow to change display settings while game is running

remove all updates functions 

play music if "SCRABBLE"

The event queue offers some simple filtering. This can help performance slightly by blocking certain event types from the queue, use the pygame.event.set_allowed() and pygame.event.set_blocked() to work with this filtering


TO SEE 

add a priority level for layer ?

tile size 2 times smaller ??
