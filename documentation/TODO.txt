__________  PRIMARY  __________

check TODO in code

Possibility to redraw Letter

display in real time points for current move

use save game



__________  REFACTORING  __________

create redrawAll() function to update the screen ? 
def redrawAll()
	layer_background.draw()
	layer_letters.draw()
	...

declare as global vars:
window
language_id

create "update" for buttons to update state base on mouse cursor position

add a priority level for layer ?

tile size 2 times smaller ??

create function for log ?

create a class Action() ?

possibility to save different games rules (board layout, letters in bag) ?



__________  SECONDARY  __________

allow to change display settings while game is running

display error message on UI when invalid move

Think of anonther display for "scrabble obtained"

UI - switch "scores" and "previous turn summary"

possibilility to change value for "points for a scrabble"

set logger to different levels from a file



__________  PERFORMANCE  __________

Separate the background into two parts to allow partial refresh of the content (board on the left and menu on the right)

find a better way to initialize game variables by using their real type ?



__________  BUG  __________

fix a glitch on LAPTOP or low resolutions (small black strip) for board when big window (bug already present in Scrabble V1) maybe due to to bad "round"
> use smaller tile size ?



__________  TO KEEP IN MIND  __________

/!\ warning for "PLAY_LETTER", the letter must not always go where the player release the click. More calculation to do use collidelistall()
/!\ warning for "PLAY_LETTER", when clicking on a butioon and relaesing the clic above a letter

The event queue offers some simple filtering. This can help performance slightly by blocking certain event types from the queue, use the pygame.event.set_allowed() and pygame.event.set_blocked() to work with this filtering
